"""Questoin: Given a sorted array of distinct integers and a target value, return the index if 
the target is found. If not, return the index where it would be if it were inserted in order."""

class Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:
        if target in nums:  # O(n): Q:Why? A: it takes iterated through n times
            return nums.index(target)
        else: 
            if target < nums[0]: #O(1)
                return 0 
            if target > nums[len(nums)-1]: #O(1)
                return len(nums)
            for i in range(0,len(nums)-1): # O(n): it takes n times 
                #print(i)
                if target > nums[i] and target < nums[i+1]:
                    return i+1
                '''
                mid = int(len(nums)/2)
                while(mid!=1){
                    
                    if( target < nums[mid])
                        left = nums[:mid]
                        mid = int(len(left)/2)
                    elif(target > nums[mid])
                        right = nums[mid:]
                        mid = int(len(right)/2)
                }
                if( target < nums[mid])
                    left = [:mid]
                    
                
                '''
